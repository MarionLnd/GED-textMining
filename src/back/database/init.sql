CREATE DATABASE IF NOT EXISTS GED;

DROP TABLE IF EXISTS EXECUTE;
DROP TABLE IF EXISTS CONCERN;
DROP TABLE IF EXISTS DOCUMENT;
DROP TABLE IF EXISTS SUB_CATEGORY;
DROP TABLE IF EXISTS RULE;
DROP TABLE IF EXISTS ACTION;
DROP TABLE IF EXISTS CATEGORY;
DROP TABLE IF EXISTS USER;

CREATE TABLE USER (
	id_user VARCHAR(100) NOT NULL PRIMARY KEY,
	login VARCHAR(100) NOT NULL,
	password VARCHAR(100) NOT NULL,
	is_active BOOLEAN NOT NULL
);

CREATE TABLE CATEGORY (
	id_category VARCHAR(100) NOT NULL PRIMARY KEY,
	name VARCHAR(200) NOT NULL
);

CREATE TABLE ACTION (
	id_action VARCHAR(100) NOT NULL PRIMARY KEY,
	can_delete BOOLEAN NOT NULL,
	can_update BOOLEAN NOT NULL
);

CREATE TABLE RULE (
	id_rule VARCHAR(100) NOT NULL PRIMARY KEY,
	archive_time TIMESTAMP NOT NULL,
	delete_time TIMESTAMP NOT NULL,
	archive_rule BOOLEAN NOT NULL,
	delete_rule BOOLEAN NOT NULL
);

CREATE TABLE SUB_CATEGORY (
	id_subcategory VARCHAR(100) NOT NULL PRIMARY KEY,
	name VARCHAR(200) NOT NULL,
	id_category VARCHAR(100) NOT NULL,
	FOREIGN KEY (id_category) REFERENCES CATEGORY(id_category)
		ON DELETE NO ACTION
		ON UPDATE NO ACTION
);

CREATE TABLE DOCUMENT (
	id_document VARCHAR(100) NOT NULL PRIMARY KEY,
	filename VARCHAR(250) NOT NULL,
	title VARCHAR(250) NULL,
	creation_date TIMESTAMP NULL,
	modification_date TIMESTAMP NULL,
	author VARCHAR(100) NULL,
	size FLOAT NULL,
	link VARCHAR(250) NULL,
	keywords JSON NULL,
	signature VARCHAR(200) NULL,
	id_rule VARCHAR(100) NOT NULL,
	id_subcategory VARCHAR(100) NOT NULL,
	FOREIGN KEY (id_rule) REFERENCES RULE (id_rule)
		ON DELETE NO ACTION
		ON UPDATE NO ACTION,
	FOREIGN KEY (id_subcategory) REFERENCES SUB_CATEGORY (id_subcategory)
		ON DELETE NO ACTION
		ON UPDATE NO ACTION
);

CREATE TABLE CONCERN (
	id_action VARCHAR(100),
	id_subcategory VARCHAR(100),
	PRIMARY KEY (id_action, id_subcategory),
	FOREIGN KEY (id_action) REFERENCES ACTION (id_action),
	FOREIGN KEY (id_subcategory) REFERENCES SUB_CATEGORY (id_subcategory)
);

CREATE TABLE EXECUTE (
	id_action VARCHAR(100),
	id_user VARCHAR(100),
	PRIMARY KEY (id_action, id_user),
	FOREIGN KEY (id_action) REFERENCES ACTION (id_action),
	FOREIGN KEY (id_user) REFERENCES USER (id_user)
);