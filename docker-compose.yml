version: "3.2"
services:
  # 1 - NODEJS CONTAINER
  nodejs:
    build:
      context: ./src/back/
    image: marionlnd/ged-script
    networks:
      - frontend
      - backend
    environment:
      - MARIADB_HOST=ged-mariadb-app
      - MARIADB_USER=UserGed
      - MARIADB_PASS=GEDGROUPE4
      - MARIADB_DB=GED
    volumes:
      - ./GED_PDF:/var/www/html # A REVERIFIER MAIS ON N'EN AURA PEUT-ETRE PAS BESOIN A LA FIN
    ports:
      - "30001:8080"
    container_name: ged-nodejs-app
  # 2 - MARIADB CONTAINER
  mariadb:
    image: mariadb:10.5
    ports:
      - "30002:3306"
    volumes:
      - db_data:/var/lib/mariadb
      - ./src/back/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend
    environment:
      - MARIADB_ROOT_PASSWORD=root
      - MARIADB_USER=UserGed
      - MARIADB_PASSWORD=GEDGROUPE4
      - MARIADB_DATABASE=GED
    container_name: ged-mariadb-app
  # 3 - PHPMYADMIN CONTAINER
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:4.7
    depends_on:
      - mariadb
    networks:
      - backend
    ports:
      - "30003:80"
    environment:
      - PMA_HOST=ged-mariadb-app
      - PMA_PORT=3306
    volumes:
      - /sessions
    container_name: ged-phpmyadmin-app
  # 4 - VUEJS CONTAINER
  vuejs:
    build:
      context: ./src/front/ged-entp
      dockerfile: Dockerfile
    networks:
      - frontend
      - backend
    volumes:
      - ./www/:/var/www/html/ # A REVERIFIER MAIS ON N'EN AURA PEUT-ETRE PAS BESOIN A LA FIN
    ports:
      - "8080:8080"
    container_name: ged-vuejs-app
  # 5 - ELASTICSEARCH CONTAINER
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    container_name: ged-elasticsearch-app
    environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - http.host=0.0.0.0
      - network.host=0.0.0.0
      - http.cors.allow-origin=*
      - http.cors.enabled=true
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - http.cors.allow-credentials=true
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - backend
      - frontend
  # 6 - KIBANA CONTAINER
  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.0
    container_name: ged-kibana-app
    ports:
      - "5601:5601"
    networks:
      - backend
    depends_on:
      - elasticsearch
  # 7 - LOGSTASH CONTAINER
  logstash:
    image: docker.elastic.co/logstash/logstash:7.13.0
    container_name: ged-logstash-app
    links:
      - elasticsearch
      - mariadb
    networks:
      - backend
    volumes:
      - ./src/back/config/logstash-mariadb.conf:/usr/share/logstash/config/logstash.conf
      - ./src/back/config/mariadb-java-client-2.7.2.jar:/usr/share/logstash/logstash-core/lib/jars/mariadb-java-client-2.7.2.jar
    command: logstash -f /usr/share/logstash/config/logstash.conf
    depends_on:
      - elasticsearch
      - mariadb

networks:
  frontend:
  backend:

volumes:
  db_data:
  data01:
